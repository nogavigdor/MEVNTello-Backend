openapi: 3.0.0
info:
  title: MEVN Tello API
  description: A Trello-like project management API
  version: 1.0.0
  contact:
    name: Noga Vigdor
    email: noga.vigdor@gmail.com
servers:
  - url: http://localhost:4000/api
  - url: https://mevntello-backend.onrender.com/api
tags:
  - name: User Routes
    description: Routes for user registration and login
  - name: Project
    description: Routes for project management
  - name: List
    description: Routes for list management
  - name: Task
    description: Routes for task management
  - name: Task Template
    description: Routes for task template management
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: auth-token
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    Project:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        allocatedHours:
          type: number
        teamMembers:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              role:
                type: string
                enum: [leader, member]
        lists:
          type: array
          items:
            type: string
    List:
      type: object
      properties:
        name:
          type: string
        projectId:
          type: string
        tasks:
          type: array
          items:
            type: string
    Task:
      type: object
      properties:
        listId:
          type: string
        name:
          type: string
        description:
          type: string
        assignedMembers:
          type: array
          items:
            type: string
        hoursAllocated:
          type: number
        hoursUsed:
          type: number
        status:
          type: string
          enum: [todo, inProgress, done]
        subTasks:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              completed:
                type: boolean
    SubTask:
      type: object
      properties:
        name:
          type: string
        completed:
          type: boolean
paths:
  /users:
    get:
      summary: Get all users
      tags:
        - User Routes
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successfully retrieved users
        '500':
          description: Server error
  /users/register:
    post:
      summary: Register a new user
      tags:
        - User Routes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request
  /users/login:
    post:
      summary: Log in a user
      tags:
        - User Routes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '400':
          description: Invalid credentials
  /projects:
    get:
      summary: Get all projects
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successfully retrieved projects
        '500':
          description: Server error
    post:
      summary: Create a new project
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                allocatedHours:
                  type: number
                teamMembers:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      role:
                        type: string
                        enum: [leader, member]
           
      responses:
        '201':
          description: Project created successfully
        '400':
          description: Bad request
  /projects/{id}:
    get:
      summary: Get a project by ID
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved project
        '404':
          description: Project not found
        '500':
          description: Server error
    put:
      summary: Update a project
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                allocatedHours:
                  type: number
                teamMembers:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      role:
                        type: string
                        enum: [leader, member]
      responses:
        '200':
          description: Project updated successfully
        '400':
          description: Bad request
        '404':
          description: Project not found
        '500':
          description: Server error
    delete:
      summary: Delete a project
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project deleted successfully
        '404':
          description: Project not found
        '500':
          description: Server error
  /projects/user/{userId}:
    get:
      summary: Get all projects by user ID
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved projects
        '404':
          description: User not found
        '500':
          description: Server error
  /lists:
    get:
      summary: Get all lists
      tags:
        - List
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successfully retrieved lists
        '500':
          description: Server error
    post:
      summary: Create a new list
      tags:
        - List
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                projectId:
                  type: string
                tasks:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: List created successfully
        '400':
          description: Bad request
  /lists/{id}:
    get:
      summary: Get a list by ID
      tags:
        - List
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved list
        '404':
          description: List not found
        '500':
          description: Server error
    put:
      summary: Update a list
      tags:
        - List
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                projectId:
                  type: string
                tasks:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: List updated successfully
        '400':
          description: Bad request
        '404':
          description: List not found
        '500':
          description: Server error
    delete:
      summary: Delete a list
      tags:
        - List
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List deleted successfully
        '404':
          description: List not found
        '500':
          description: Server error
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - Task
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successfully retrieved tasks
        '500':
          description: Server error
    post:
      summary: Create a new task
      tags:
        - Tasks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
                  description: The ID of the project
                listId:
                  type: string
                  description: The ID of the list
                name:
                  type: string
                  description: The name of the task
                description:
                  type: string
                  description: The description of the task
                assignedMembers:
                  type: array
                  items:
                    type: string
                    description: The ID of the assigned members
                hoursAllocated:
                  type: number
                  description: The allocated hours for the task
                hoursUsed:
                  type: number
                  description: The used hours for the task
                status:
                  type: string
                  enum: ["todo", "inProgress", "done"]
                  description: The status of the task
      responses:
        '201':
          description: Task created successfully
        '400':
          description: Bad request
        '401':
          description: Access denied
        '500':
          description: Internal server error
    get:
      summary: Get a task by ID
      tags:
        - Task
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved task
        '404':
          description: Task not found
        '500':
          description: Server error
    put:
      summary: Update a task
      tags:
        - Task
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listId:
                  type: string
                name:
                  type: string
                description:
                  type: string
                assignedMembers:
                  type: array
                  items:
                    type: string
                hoursAllocated:
                  type: number
                hoursUsed:
                  type: number
                status:
                  type: string
                  enum: [todo, inProgress, done]
                subTasks:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      completed:
                        type: boolean
      responses:
        '200':
          description: Task updated successfully
        '400':
          description: Bad request
        '404':
          description: Task not found
        '500':
          description: Server error
    delete:
      summary: Delete a task
      tags:
        - Task
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task deleted successfully
        '404':
          description: Task not found
        '500':
          description: Server error
  /tasks/{taskId}/subtasks:
    post:
      summary: Create a new subtask
      tags:
        - Task
      security:
        - ApiKeyAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                completed:
                  type: boolean
      responses:
        '201':
          description: Subtask created successfully
        '400':
          description: Bad request
    get:
      summary: Get all subtasks
      tags:
        - Task
      security:
        - ApiKeyAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved subtasks
        '404':
          description: Task not found
        '500':
          description: Server error
  /tasks/{taskId}/subtasks/{subtaskId}:
    put:
      summary: Update a subtask
      tags:
        - Task
      security:
        - ApiKeyAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - name: subtaskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                completed:
                  type: boolean
      responses:
        '200':
          description: Subtask updated successfully
        '400':
          description: Bad request
        '404':
          description: Subtask not found
        '500':
          description: Server error
    delete:
      summary: Delete a subtask
      tags:
        - Task
      security:
        - ApiKeyAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - name: subtaskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subtask deleted successfully
        '404':
          description: Subtask not found
        '500':
          description: Server error
  /taskTemplates:
    get:
      summary: Get all task templates
      tags:
        - Task Template
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successfully retrieved task templates
        '500':
          description: Server error
    post:
      summary: Create a new task template
      tags:
        - Task Template
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                lists:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Task template created successfully
        '400':
          description: Bad request
  /taskTemplates/{id}:
    get:
      summary: Get a task template by ID
      tags:
        - Task Template
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved task template
        '404':
          description: Task template not found
        '500':
          description: Server error
    put:
      summary: Update a task template
      tags:
        - Task Template
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                lists:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Task template updated successfully
        '400':
          description: Bad request
        '404':
          description: Task template not found
        '500':
          description: Server error
    delete:
      summary: Delete a task template
      tags:
        - Task Template
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task template deleted successfully
        '404':
          description: Task template not found
        '500':
          description: Server error