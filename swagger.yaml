openapi: 3.0.0
info:
  title: MEVN Tello API
  description: A Trello-like project management API
  version: 1.0.0
  contact:
    name: Noga Vigdor
    email: noga.vigdor@gmail.com
servers:
  - url: http://localhost:4000/api
  - url: https://your-deployed-api-url.com/api
paths:
  /user/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request
  /user/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '400':
          description: Invalid credentials
  /projects:
    get:
      summary: Get all projects
      responses:
        '200':
          description: Successfully retrieved projects
        '500':
          description: Server error
    post:
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                allocatedHours:
                  type: number
                teamMembers:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                      role:
                        type: string
                        enum: [leader, member]
                lists:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Project created successfully
        '400':
          description: Bad request
  /projects/{id}:
    get:
      summary: Get a project by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved project
        '404':
          description: Project not found
        '500':
          description: Server error
    put:
      summary: Update a project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                allocatedHours:
                  type: number
                teamMembers:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                      role:
                        type: string
                        enum: [leader, member]
                lists:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Project updated successfully
        '400':
          description: Bad request
        '404':
          description: Project not found
        '500':
          description: Server error
    delete:
      summary: Delete a project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project deleted successfully
        '404':
          description: Project not found
        '500':
          description: Server error
  /lists:
    get:
      summary: Get all lists
      responses:
        '200':
          description: Successfully retrieved lists
        '500':
          description: Server error
    post:
      summary: Create a new list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                projectId:
                  type: string
                tasks:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: List created successfully
        '400':
          description: Bad request
  /lists/{id}:
    get:
      summary: Get a list by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved list
        '404':
          description: List not found
        '500':
          description: Server error
    put:
      summary: Update a list
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                projectId:
                  type: string
                tasks:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: List updated successfully
        '400':
          description: Bad request
        '404':
          description: List not found
        '500':
          description: Server error
    delete:
      summary: Delete a list
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List deleted successfully
        '404':
          description: List not found
        '500':
          description: Server error
  /tasks:
    get:
      summary: Get all tasks
      responses:
        '200':
          description: Successfully retrieved tasks
        '500':
          description: Server error
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listId:
                  type: string
                name:
                  type: string
                description:
                  type: string
                assignedMembers:
                  type: array
                  items:
                    type: string
                hoursAllocated:
                  type: number
                hoursUsed:
                  type: number
                status:
                  type: string
                  enum: [todo, inProgress, done]
                subTasks:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      completed:
                        type: boolean
      responses:
        '201':
          description: Task created successfully
        '400':
          description: Bad request
  /tasks/{id}:
    get:
      summary: Get a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved task
        '404':
          description: Task not found
        '500':
          description: Server error
    put:
      summary: Update a task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listId:
                  type: string
                name:
                  type: string
                description:
                  type: string
                assignedMembers:
                  type: array
                  items:
                    type: string
                hoursAllocated:
                  type: number
                hoursUsed:
                  type: number
                status:
                  type: string
                  enum: [todo, inProgress, done]
                subTasks:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      completed:
                        type: boolean
      responses:
        '200':
          description: Task updated successfully
        '400':
          description: Bad request
        '404':
          description: Task not found
        '500':
          description: Server error
    delete:
      summary: Delete a task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task deleted successfully
        '404':
          description: Task not found
        '500':
          description: Server error
  /tasks/{taskId}/subtasks:
    post:
      summary: Create a new subtask
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                completed:
                  type: boolean
      responses:
        '201':
          description: Subtask created successfully
        '400':
          description: Bad request
    get:
      summary: Get all subtasks
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved subtasks
        '404':
          description: Task not found
        '500':
          description: Server error
  /tasks/{taskId}/subtasks/{subtaskId}:
    put:
      summary: Update a subtask
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - name: subtaskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                completed:
                  type: boolean
      responses:
        '200':
          description: Subtask updated successfully
        '400':
          description: Bad request
        '404':
          description: Subtask not found
        '500':
          description: Server error
    delete:
      summary: Delete a subtask
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - name: subtaskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subtask deleted successfully
        '404':
          description: Subtask not found
        '500':
          description: Server error
